# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: rebox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests/test.py
    - name: Codecov
      # You may pin to the exact commit or the version.
      # uses: codecov/codecov-action@51d810878be5422784e86451c0e7c14e5860ec47
      uses: codecov/codecov-action@v2.0.2
      with:
        # Repository upload token - get it from codecov.io. Required only for private repositories
        token: dfee4473-f12d-4fac-81b7-319ae225590d
        # Comma-separated list of files to upload
        files: # optional
        # Directory to search for coverage reports.
        directory: # optional
        # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
        flags: # optional
        # The commit SHA of the parent for which you are uploading coverage. If not present, the parent will be determined using the API of your repository provider.  When using the repository providers API, the parent is determined via finding the closest ancestor to the commit.
        commit_parent: # optional
        # Don't upload files to Codecov
        dry_run: # optional
        # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
        env_vars: # optional
        # Specify whether or not CI build should fail if Codecov runs into an error during upload
        fail_ci_if_error: # optional
        # Path to coverage file to upload
        file: # optional
        # Comma-separated list, see the README for options and their usage
        functionalities: # optional
        # Move discovered coverage reports to the trash
        move_coverage_to_trash: # optional
        # User defined upload name. Visible in Codecov UI
        name: # optional
        # Specify the branch name
        override_branch: # optional
        # Specify the build number
        override_build: # optional
        # Specify the commit SHA
        override_commit: # optional
        # Specify the pull request number
        override_pr: # optional
        # Specify the git tag
        override_tag: # optional
        # Used when not in git/hg project to identify project root directory
        root_dir: # optional
        # Specify the slug manually (Enterprise use)
        slug: # optional
        # Change the upload host (Enterprise use)
        url: # optional
        # Specify whether the Codecov output should be verbose
        verbose: # optional
        # Directory in which to execute codecov.sh
        working-directory: # optional
